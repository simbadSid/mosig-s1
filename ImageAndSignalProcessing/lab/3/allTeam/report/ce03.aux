\relax 
\select@language{english}
\@writefile{toc}{\select@language{english}}
\@writefile{lof}{\select@language{english}}
\@writefile{lot}{\select@language{english}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Material \& Methods}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Fourier transform}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.1}Definition}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.2}Formal definition and implementation on discrete time depending signals}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Python code to compute Fourier transform of a time depending discrete signal.}}{2}}
\newlabel{1DFT.py}{{1}{2}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.1.3}Advantages and properties}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Python code to compute the inverse function of the Fourier transform.}}{3}}
\newlabel{1invDFT.py}{{2}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}First use of the Fourier transform: discrete impulse signal}{3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.1}Formal expression of the Fourier transform}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Python code to generate an impulse signal $\delta _{a}$.}}{4}}
\newlabel{generateDelta.py}{{3}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.2.2}Impact on the decomposition of the signal: periodicity}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Convolution and derivative expressions}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.1}Linear and circular convolution definition}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Python code to generate a circular convolution.}}{5}}
\newlabel{circularConvolution.py}{{4}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.3.2}Circular convolution using Fourier transform}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Python code to efficiently generate a circular convolution using a Fourier transform.}}{5}}
\newlabel{circularConvolutionUsingFourier.py}{{5}{5}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Experiments}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Fourier transform and inverse}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.1}Check basic property of the Fourier transform}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Gaussian and impulse signal on the left. $FT^{-1}(FT(f(x)))$ on the right}}{6}}
\newlabel{gaussianAndImpulse.png}{{6}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.1.2}Property of the Fourier transform on discrete impulse signals}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Theoretical and computed transform of a Gaussian.}}{7}}
\newlabel{gaussianTransform.png}{{7}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Fourier transform of $\delta _{0}, \delta _{4} and \delta _{8}$.}}{7}}
\newlabel{ftDelta.png}{{8}{7}}
\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Convolution and Fourier transform}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.1}Use of the output signal length M}{8}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {3.2.2}Equivalence between Fourier transform and linear convolution}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Linear and circular convolution and them Fourier transform.}}{8}}
\newlabel{linear_circular_convolution_example.jpg}{{9}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Conclusion}{8}}
